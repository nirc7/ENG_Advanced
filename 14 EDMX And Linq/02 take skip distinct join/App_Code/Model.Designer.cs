//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_Actor_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VideoLibProjectV01Model.Country), "Actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Actor), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_Movie_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.Country), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Movie), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_Rent_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.Member), "Rent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Rent), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_Review_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.Member), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Review), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_WaitingList_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.Member), "WaitingList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.WaitingList), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_Movie_MovieType", "MovieType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.MovieType), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Movie), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_Rent_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.Movie), "Rent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Rent), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_Review_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.Movie), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Review), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "FK_WaitingList_Movie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoLibProjectV01Model.Movie), "WaitingList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.WaitingList), true)]
[assembly: EdmRelationshipAttribute("VideoLibProjectV01Model", "ActorMovie", "Actor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Actor), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoLibProjectV01Model.Movie))]

#endregion

namespace VideoLibProjectV01Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class VideoLibProjectV01Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new VideoLibProjectV01Entities object using the connection string found in the 'VideoLibProjectV01Entities' section of the application configuration file.
        /// </summary>
        public VideoLibProjectV01Entities() : base("name=VideoLibProjectV01Entities", "VideoLibProjectV01Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VideoLibProjectV01Entities object.
        /// </summary>
        public VideoLibProjectV01Entities(string connectionString) : base(connectionString, "VideoLibProjectV01Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VideoLibProjectV01Entities object.
        /// </summary>
        public VideoLibProjectV01Entities(EntityConnection connection) : base(connection, "VideoLibProjectV01Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Actor> Actors
        {
            get
            {
                if ((_Actors == null))
                {
                    _Actors = base.CreateObjectSet<Actor>("Actors");
                }
                return _Actors;
            }
        }
        private ObjectSet<Actor> _Actors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Movie> Movies
        {
            get
            {
                if ((_Movies == null))
                {
                    _Movies = base.CreateObjectSet<Movie>("Movies");
                }
                return _Movies;
            }
        }
        private ObjectSet<Movie> _Movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MovieType> MovieTypes
        {
            get
            {
                if ((_MovieTypes == null))
                {
                    _MovieTypes = base.CreateObjectSet<MovieType>("MovieTypes");
                }
                return _MovieTypes;
            }
        }
        private ObjectSet<MovieType> _MovieTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<popular> populars
        {
            get
            {
                if ((_populars == null))
                {
                    _populars = base.CreateObjectSet<popular>("populars");
                }
                return _populars;
            }
        }
        private ObjectSet<popular> _populars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rent> Rents
        {
            get
            {
                if ((_Rents == null))
                {
                    _Rents = base.CreateObjectSet<Rent>("Rents");
                }
                return _Rents;
            }
        }
        private ObjectSet<Rent> _Rents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Review> Reviews
        {
            get
            {
                if ((_Reviews == null))
                {
                    _Reviews = base.CreateObjectSet<Review>("Reviews");
                }
                return _Reviews;
            }
        }
        private ObjectSet<Review> _Reviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WaitingList> WaitingLists
        {
            get
            {
                if ((_WaitingLists == null))
                {
                    _WaitingLists = base.CreateObjectSet<WaitingList>("WaitingLists");
                }
                return _WaitingLists;
            }
        }
        private ObjectSet<WaitingList> _WaitingLists;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActors(Actor actor)
        {
            base.AddObject("Actors", actor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovies(Movie movie)
        {
            base.AddObject("Movies", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MovieTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovieTypes(MovieType movieType)
        {
            base.AddObject("MovieTypes", movieType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the populars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopopulars(popular popular)
        {
            base.AddObject("populars", popular);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRents(Rent rent)
        {
            base.AddObject("Rents", rent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviews(Review review)
        {
            base.AddObject("Reviews", review);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WaitingLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWaitingLists(WaitingList waitingList)
        {
            base.AddObject("WaitingLists", waitingList);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="Actor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Actor object.
        /// </summary>
        /// <param name="actorID">Initial value of the ActorID property.</param>
        /// <param name="actorName">Initial value of the ActorName property.</param>
        /// <param name="birthDate">Initial value of the BirthDate property.</param>
        public static Actor CreateActor(global::System.Int32 actorID, global::System.String actorName, global::System.DateTime birthDate)
        {
            Actor actor = new Actor();
            actor.ActorID = actorID;
            actor.ActorName = actorName;
            actor.BirthDate = birthDate;
            return actor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActorID
        {
            get
            {
                return _ActorID;
            }
            set
            {
                if (_ActorID != value)
                {
                    OnActorIDChanging(value);
                    ReportPropertyChanging("ActorID");
                    _ActorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActorID");
                    OnActorIDChanged();
                }
            }
        }
        private global::System.Int32 _ActorID;
        partial void OnActorIDChanging(global::System.Int32 value);
        partial void OnActorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActorName
        {
            get
            {
                return _ActorName;
            }
            set
            {
                OnActorNameChanging(value);
                ReportPropertyChanging("ActorName");
                _ActorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActorName");
                OnActorNameChanged();
            }
        }
        private global::System.String _ActorName;
        partial void OnActorNameChanging(global::System.String value);
        partial void OnActorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int16> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int16> value);
        partial void OnCountryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Actor_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("VideoLibProjectV01Model.FK_Actor_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("VideoLibProjectV01Model.FK_Actor_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("VideoLibProjectV01Model.FK_Actor_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("VideoLibProjectV01Model.FK_Actor_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "ActorMovie", "Movie")]
        public EntityCollection<Movie> Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Movie>("VideoLibProjectV01Model.ActorMovie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Movie>("VideoLibProjectV01Model.ActorMovie", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static Country CreateCountry(global::System.Int16 countryID, global::System.String countryName)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.CountryName = countryName;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int16 _CountryID;
        partial void OnCountryIDChanging(global::System.Int16 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Actor_Country", "Actor")]
        public EntityCollection<Actor> Actors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actor>("VideoLibProjectV01Model.FK_Actor_Country", "Actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actor>("VideoLibProjectV01Model.FK_Actor_Country", "Actor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Movie_Country", "Movie")]
        public EntityCollection<Movie> Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Movie>("VideoLibProjectV01Model.FK_Movie_Country", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Movie>("VideoLibProjectV01Model.FK_Movie_Country", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="memberLevel">Initial value of the MemberLevel property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="mobilePhone">Initial value of the MobilePhone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="daysBalance">Initial value of the DaysBalance property.</param>
        /// <param name="memberSince">Initial value of the MemberSince property.</param>
        public static Member CreateMember(global::System.Int32 memberID, global::System.Byte memberLevel, global::System.String firstName, global::System.String lastName, global::System.Int32 id, global::System.Int32 mobilePhone, global::System.String email, global::System.String password, global::System.Int16 daysBalance, global::System.DateTime memberSince)
        {
            Member member = new Member();
            member.MemberID = memberID;
            member.MemberLevel = memberLevel;
            member.FirstName = firstName;
            member.LastName = lastName;
            member.ID = id;
            member.MobilePhone = mobilePhone;
            member.Email = email;
            member.Password = password;
            member.DaysBalance = daysBalance;
            member.MemberSince = memberSince;
            return member;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Int32 _MemberID;
        partial void OnMemberIDChanging(global::System.Int32 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MemberLevel
        {
            get
            {
                return _MemberLevel;
            }
            set
            {
                OnMemberLevelChanging(value);
                ReportPropertyChanging("MemberLevel");
                _MemberLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberLevel");
                OnMemberLevelChanged();
            }
        }
        private global::System.Byte _MemberLevel;
        partial void OnMemberLevelChanging(global::System.Byte value);
        partial void OnMemberLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> HouseNumber
        {
            get
            {
                return _HouseNumber;
            }
            set
            {
                OnHouseNumberChanging(value);
                ReportPropertyChanging("HouseNumber");
                _HouseNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HouseNumber");
                OnHouseNumberChanged();
            }
        }
        private Nullable<global::System.Int16> _HouseNumber;
        partial void OnHouseNumberChanging(Nullable<global::System.Int16> value);
        partial void OnHouseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private Nullable<global::System.Int32> _HomePhone;
        partial void OnHomePhoneChanging(Nullable<global::System.Int32> value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.Int32 _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.Int32 value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DaysBalance
        {
            get
            {
                return _DaysBalance;
            }
            set
            {
                OnDaysBalanceChanging(value);
                ReportPropertyChanging("DaysBalance");
                _DaysBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysBalance");
                OnDaysBalanceChanged();
            }
        }
        private global::System.Int16 _DaysBalance;
        partial void OnDaysBalanceChanging(global::System.Int16 value);
        partial void OnDaysBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MemberSince
        {
            get
            {
                return _MemberSince;
            }
            set
            {
                OnMemberSinceChanging(value);
                ReportPropertyChanging("MemberSince");
                _MemberSince = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberSince");
                OnMemberSinceChanged();
            }
        }
        private global::System.DateTime _MemberSince;
        partial void OnMemberSinceChanging(global::System.DateTime value);
        partial void OnMemberSinceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Rent_Member", "Rent")]
        public EntityCollection<Rent> Rents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rent>("VideoLibProjectV01Model.FK_Rent_Member", "Rent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rent>("VideoLibProjectV01Model.FK_Rent_Member", "Rent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Review_Member", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("VideoLibProjectV01Model.FK_Review_Member", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("VideoLibProjectV01Model.FK_Review_Member", "Review", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_WaitingList_Member", "WaitingList")]
        public EntityCollection<WaitingList> WaitingLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WaitingList>("VideoLibProjectV01Model.FK_WaitingList_Member", "WaitingList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WaitingList>("VideoLibProjectV01Model.FK_WaitingList_Member", "WaitingList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="movieName">Initial value of the MovieName property.</param>
        /// <param name="movieTypeID">Initial value of the MovieTypeID property.</param>
        /// <param name="copies">Initial value of the Copies property.</param>
        /// <param name="summary">Initial value of the Summary property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="lenght">Initial value of the Lenght property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="moviePicUrl">Initial value of the MoviePicUrl property.</param>
        /// <param name="trailerUrl">Initial value of the TrailerUrl property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static Movie CreateMovie(global::System.String movieID, global::System.String movieName, global::System.Int16 movieTypeID, global::System.Int16 copies, global::System.String summary, global::System.Int16 year, global::System.Int16 lenght, global::System.Int16 countryID, global::System.String moviePicUrl, global::System.String trailerUrl, global::System.Byte active, global::System.DateTime dateAdded)
        {
            Movie movie = new Movie();
            movie.MovieID = movieID;
            movie.MovieName = movieName;
            movie.MovieTypeID = movieTypeID;
            movie.Copies = copies;
            movie.Summary = summary;
            movie.Year = year;
            movie.Lenght = lenght;
            movie.CountryID = countryID;
            movie.MoviePicUrl = moviePicUrl;
            movie.TrailerUrl = trailerUrl;
            movie.Active = active;
            movie.DateAdded = dateAdded;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                if (_MovieID != value)
                {
                    OnMovieIDChanging(value);
                    ReportPropertyChanging("MovieID");
                    _MovieID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MovieID");
                    OnMovieIDChanged();
                }
            }
        }
        private global::System.String _MovieID;
        partial void OnMovieIDChanging(global::System.String value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieName
        {
            get
            {
                return _MovieName;
            }
            set
            {
                OnMovieNameChanging(value);
                ReportPropertyChanging("MovieName");
                _MovieName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovieName");
                OnMovieNameChanged();
            }
        }
        private global::System.String _MovieName;
        partial void OnMovieNameChanging(global::System.String value);
        partial void OnMovieNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MovieTypeID
        {
            get
            {
                return _MovieTypeID;
            }
            set
            {
                OnMovieTypeIDChanging(value);
                ReportPropertyChanging("MovieTypeID");
                _MovieTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieTypeID");
                OnMovieTypeIDChanged();
            }
        }
        private global::System.Int16 _MovieTypeID;
        partial void OnMovieTypeIDChanging(global::System.Int16 value);
        partial void OnMovieTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Copies
        {
            get
            {
                return _Copies;
            }
            set
            {
                OnCopiesChanging(value);
                ReportPropertyChanging("Copies");
                _Copies = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Copies");
                OnCopiesChanged();
            }
        }
        private global::System.Int16 _Copies;
        partial void OnCopiesChanging(global::System.Int16 value);
        partial void OnCopiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Lenght
        {
            get
            {
                return _Lenght;
            }
            set
            {
                OnLenghtChanging(value);
                ReportPropertyChanging("Lenght");
                _Lenght = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lenght");
                OnLenghtChanged();
            }
        }
        private global::System.Int16 _Lenght;
        partial void OnLenghtChanging(global::System.Int16 value);
        partial void OnLenghtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int16 _CountryID;
        partial void OnCountryIDChanging(global::System.Int16 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MoviePicUrl
        {
            get
            {
                return _MoviePicUrl;
            }
            set
            {
                OnMoviePicUrlChanging(value);
                ReportPropertyChanging("MoviePicUrl");
                _MoviePicUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MoviePicUrl");
                OnMoviePicUrlChanged();
            }
        }
        private global::System.String _MoviePicUrl;
        partial void OnMoviePicUrlChanging(global::System.String value);
        partial void OnMoviePicUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrailerUrl
        {
            get
            {
                return _TrailerUrl;
            }
            set
            {
                OnTrailerUrlChanging(value);
                ReportPropertyChanging("TrailerUrl");
                _TrailerUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrailerUrl");
                OnTrailerUrlChanged();
            }
        }
        private global::System.String _TrailerUrl;
        partial void OnTrailerUrlChanging(global::System.String value);
        partial void OnTrailerUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Byte _Active;
        partial void OnActiveChanging(global::System.Byte value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Movie_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("VideoLibProjectV01Model.FK_Movie_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("VideoLibProjectV01Model.FK_Movie_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("VideoLibProjectV01Model.FK_Movie_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("VideoLibProjectV01Model.FK_Movie_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Movie_MovieType", "MovieType")]
        public MovieType MovieType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieType>("VideoLibProjectV01Model.FK_Movie_MovieType", "MovieType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieType>("VideoLibProjectV01Model.FK_Movie_MovieType", "MovieType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MovieType> MovieTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieType>("VideoLibProjectV01Model.FK_Movie_MovieType", "MovieType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MovieType>("VideoLibProjectV01Model.FK_Movie_MovieType", "MovieType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Rent_Movie", "Rent")]
        public EntityCollection<Rent> Rents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rent>("VideoLibProjectV01Model.FK_Rent_Movie", "Rent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rent>("VideoLibProjectV01Model.FK_Rent_Movie", "Rent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Review_Movie", "Review")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("VideoLibProjectV01Model.FK_Review_Movie", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("VideoLibProjectV01Model.FK_Review_Movie", "Review", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_WaitingList_Movie", "WaitingList")]
        public EntityCollection<WaitingList> WaitingLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WaitingList>("VideoLibProjectV01Model.FK_WaitingList_Movie", "WaitingList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WaitingList>("VideoLibProjectV01Model.FK_WaitingList_Movie", "WaitingList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "ActorMovie", "Actor")]
        public EntityCollection<Actor> Actors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actor>("VideoLibProjectV01Model.ActorMovie", "Actor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actor>("VideoLibProjectV01Model.ActorMovie", "Actor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="MovieType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MovieType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MovieType object.
        /// </summary>
        /// <param name="movieTypeID">Initial value of the MovieTypeID property.</param>
        /// <param name="movieTypeName">Initial value of the MovieTypeName property.</param>
        public static MovieType CreateMovieType(global::System.Int16 movieTypeID, global::System.String movieTypeName)
        {
            MovieType movieType = new MovieType();
            movieType.MovieTypeID = movieTypeID;
            movieType.MovieTypeName = movieTypeName;
            return movieType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MovieTypeID
        {
            get
            {
                return _MovieTypeID;
            }
            set
            {
                if (_MovieTypeID != value)
                {
                    OnMovieTypeIDChanging(value);
                    ReportPropertyChanging("MovieTypeID");
                    _MovieTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MovieTypeID");
                    OnMovieTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _MovieTypeID;
        partial void OnMovieTypeIDChanging(global::System.Int16 value);
        partial void OnMovieTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieTypeName
        {
            get
            {
                return _MovieTypeName;
            }
            set
            {
                OnMovieTypeNameChanging(value);
                ReportPropertyChanging("MovieTypeName");
                _MovieTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovieTypeName");
                OnMovieTypeNameChanged();
            }
        }
        private global::System.String _MovieTypeName;
        partial void OnMovieTypeNameChanging(global::System.String value);
        partial void OnMovieTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Movie_MovieType", "Movie")]
        public EntityCollection<Movie> Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Movie>("VideoLibProjectV01Model.FK_Movie_MovieType", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Movie>("VideoLibProjectV01Model.FK_Movie_MovieType", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="popular")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class popular : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new popular object.
        /// </summary>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        public static popular Createpopular(global::System.String movieID)
        {
            popular popular = new popular();
            popular.MovieID = movieID;
            return popular;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                if (_MovieID != value)
                {
                    OnMovieIDChanging(value);
                    ReportPropertyChanging("MovieID");
                    _MovieID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MovieID");
                    OnMovieIDChanged();
                }
            }
        }
        private global::System.String _MovieID;
        partial void OnMovieIDChanging(global::System.String value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> movieCount
        {
            get
            {
                return _movieCount;
            }
            set
            {
                OnmovieCountChanging(value);
                ReportPropertyChanging("movieCount");
                _movieCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("movieCount");
                OnmovieCountChanged();
            }
        }
        private Nullable<global::System.Int32> _movieCount;
        partial void OnmovieCountChanging(Nullable<global::System.Int32> value);
        partial void OnmovieCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="Rent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rent object.
        /// </summary>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="rentStart">Initial value of the RentStart property.</param>
        public static Rent CreateRent(global::System.Int32 memberID, global::System.String movieID, global::System.DateTime rentStart)
        {
            Rent rent = new Rent();
            rent.MemberID = memberID;
            rent.MovieID = movieID;
            rent.RentStart = rentStart;
            return rent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Int32 _MemberID;
        partial void OnMemberIDChanging(global::System.Int32 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                if (_MovieID != value)
                {
                    OnMovieIDChanging(value);
                    ReportPropertyChanging("MovieID");
                    _MovieID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MovieID");
                    OnMovieIDChanged();
                }
            }
        }
        private global::System.String _MovieID;
        partial void OnMovieIDChanging(global::System.String value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RentStart
        {
            get
            {
                return _RentStart;
            }
            set
            {
                if (_RentStart != value)
                {
                    OnRentStartChanging(value);
                    ReportPropertyChanging("RentStart");
                    _RentStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RentStart");
                    OnRentStartChanged();
                }
            }
        }
        private global::System.DateTime _RentStart;
        partial void OnRentStartChanging(global::System.DateTime value);
        partial void OnRentStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RentEnd
        {
            get
            {
                return _RentEnd;
            }
            set
            {
                OnRentEndChanging(value);
                ReportPropertyChanging("RentEnd");
                _RentEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RentEnd");
                OnRentEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _RentEnd;
        partial void OnRentEndChanging(Nullable<global::System.DateTime> value);
        partial void OnRentEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RentDays
        {
            get
            {
                return _RentDays;
            }
            set
            {
                OnRentDaysChanging(value);
                ReportPropertyChanging("RentDays");
                _RentDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RentDays");
                OnRentDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _RentDays;
        partial void OnRentDaysChanging(Nullable<global::System.Int32> value);
        partial void OnRentDaysChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Rent_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_Rent_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_Rent_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_Rent_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("VideoLibProjectV01Model.FK_Rent_Member", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Rent_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_Rent_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_Rent_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_Rent_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("VideoLibProjectV01Model.FK_Rent_Movie", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Review object.
        /// </summary>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="reviewText">Initial value of the ReviewText property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        public static Review CreateReview(global::System.Int32 memberID, global::System.String movieID, global::System.String reviewText, global::System.Byte rate)
        {
            Review review = new Review();
            review.MemberID = memberID;
            review.MovieID = movieID;
            review.ReviewText = reviewText;
            review.Rate = rate;
            return review;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Int32 _MemberID;
        partial void OnMemberIDChanging(global::System.Int32 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                if (_MovieID != value)
                {
                    OnMovieIDChanging(value);
                    ReportPropertyChanging("MovieID");
                    _MovieID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MovieID");
                    OnMovieIDChanged();
                }
            }
        }
        private global::System.String _MovieID;
        partial void OnMovieIDChanging(global::System.String value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReviewText
        {
            get
            {
                return _ReviewText;
            }
            set
            {
                OnReviewTextChanging(value);
                ReportPropertyChanging("ReviewText");
                _ReviewText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReviewText");
                OnReviewTextChanged();
            }
        }
        private global::System.String _ReviewText;
        partial void OnReviewTextChanging(global::System.String value);
        partial void OnReviewTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Byte _Rate;
        partial void OnRateChanging(global::System.Byte value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReviewDate
        {
            get
            {
                return _ReviewDate;
            }
            set
            {
                OnReviewDateChanging(value);
                ReportPropertyChanging("ReviewDate");
                _ReviewDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReviewDate");
                OnReviewDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReviewDate;
        partial void OnReviewDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReviewDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Review_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_Review_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_Review_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_Review_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("VideoLibProjectV01Model.FK_Review_Member", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_Review_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_Review_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_Review_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_Review_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("VideoLibProjectV01Model.FK_Review_Movie", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VideoLibProjectV01Model", Name="WaitingList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WaitingList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WaitingList object.
        /// </summary>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="movieID">Initial value of the MovieID property.</param>
        /// <param name="waitDate">Initial value of the WaitDate property.</param>
        public static WaitingList CreateWaitingList(global::System.Int32 memberID, global::System.String movieID, global::System.DateTime waitDate)
        {
            WaitingList waitingList = new WaitingList();
            waitingList.MemberID = memberID;
            waitingList.MovieID = movieID;
            waitingList.WaitDate = waitDate;
            return waitingList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Int32 _MemberID;
        partial void OnMemberIDChanging(global::System.Int32 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieID
        {
            get
            {
                return _MovieID;
            }
            set
            {
                if (_MovieID != value)
                {
                    OnMovieIDChanging(value);
                    ReportPropertyChanging("MovieID");
                    _MovieID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MovieID");
                    OnMovieIDChanged();
                }
            }
        }
        private global::System.String _MovieID;
        partial void OnMovieIDChanging(global::System.String value);
        partial void OnMovieIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime WaitDate
        {
            get
            {
                return _WaitDate;
            }
            set
            {
                OnWaitDateChanging(value);
                ReportPropertyChanging("WaitDate");
                _WaitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WaitDate");
                OnWaitDateChanged();
            }
        }
        private global::System.DateTime _WaitDate;
        partial void OnWaitDateChanging(global::System.DateTime value);
        partial void OnWaitDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_WaitingList_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_WaitingList_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_WaitingList_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("VideoLibProjectV01Model.FK_WaitingList_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("VideoLibProjectV01Model.FK_WaitingList_Member", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VideoLibProjectV01Model", "FK_WaitingList_Movie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_WaitingList_Movie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_WaitingList_Movie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("VideoLibProjectV01Model.FK_WaitingList_Movie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("VideoLibProjectV01Model.FK_WaitingList_Movie", "Movie", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
